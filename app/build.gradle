/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter test framework.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.11.4'

    // This dependency is used by the application.
    implementation libs.guava

    // Replace org.json dependency with Jackson
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'

    // Replace snakeyaml with configurate-yaml for YAML parsing
    implementation 'org.spongepowered:configurate-yaml:4.1.2'

    // Add Mockito for testing
    testImplementation 'org.mockito:mockito-core:4.0.0'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'me.wayne.App'
}

tasks.register('runClient', JavaExec) {
    group = 'application'
    description = 'Run the InMemoryDataStoreClient'
    classpath = sourceSets.main.runtimeClasspath
    mainClass.set('me.wayne.InMemoryDataStoreClient')
}

sourceSets {
    main {
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
}